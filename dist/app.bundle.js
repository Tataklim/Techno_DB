/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./server.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./config/constants.js":
/*!*****************************!*\
  !*** ./config/constants.js ***!
  \*****************************/
/*! exports provided: STATUSES, API */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STATUSES\", function() { return STATUSES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"API\", function() { return API; });\nconst STATUSES = {\n    SUCCESS: 'success',\n    NOT_FOUND: 'not found',\n    DUPLICATION: 'duplication',\n    WRONG_PARENT: 'wrong parent',\n};\n\n// export const API = '';\nconst API = '/api';\n\n\n//# sourceURL=webpack:///./config/constants.js?");

/***/ }),

/***/ "./internal/app/router/router.js":
/*!***************************************!*\
  !*** ./internal/app/router/router.js ***!
  \***************************************/
/*! exports provided: router */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"router\", function() { return router; });\n/* harmony import */ var _pkg_user_delivery_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../pkg/user/delivery.js */ \"./internal/pkg/user/delivery.js\");\n/* harmony import */ var _pkg_forum_delivery_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../pkg/forum/delivery.js */ \"./internal/pkg/forum/delivery.js\");\n/* harmony import */ var _pkg_thread_delivery_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../pkg/thread/delivery.js */ \"./internal/pkg/thread/delivery.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n/* harmony import */ var _pkg_post_delivery_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../pkg/post/delivery.js */ \"./internal/pkg/post/delivery.js\");\n/* harmony import */ var _pkg_service_delivery_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../pkg/service/delivery.js */ \"./internal/pkg/service/delivery.js\");\n\n\n\n\n\n\n\nconst router = (app, pool, pool2, sql) => {\n    const userDelivery = new _pkg_user_delivery_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](pool, sql);\n    const forumDelivery = new _pkg_forum_delivery_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](pool, sql);\n    const threadDelivery = new _pkg_thread_delivery_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](pool, sql);\n    const postDelivery = new _pkg_post_delivery_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](pool, sql);\n    const serviceDelivery = new _pkg_service_delivery_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](pool2);\n\n    app.get(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/service/status', (request, reply) => {\n        serviceDelivery.getData(request, reply);\n    });\n\n    app.post(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/service/clear', (request, reply) => {\n        serviceDelivery.clear(request, reply);\n    });\n\n    app.post(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/user/:nickname/create', (request, reply) => {\n        userDelivery.createUser(request, reply);\n    });\n\n    app.get(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/user/:nickname/profile', (request, reply) => {\n        userDelivery.getUser(request, reply);\n    });\n\n    app.post(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/user/:nickname/profile', (request, reply) => {\n        userDelivery.updateUser(request, reply);\n    });\n\n    app.post(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/forum/create', (request, reply) => {\n        forumDelivery.createForum(request, reply);\n    });\n\n    app.get(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/forum/:slug/details', (request, reply) => {\n        forumDelivery.getForum(request, reply);\n    });\n\n    app.post(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/forum/:forum/create', (request, reply) => {\n        threadDelivery.createThread(request, reply);\n    });\n\n    app.get(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/forum/:slug/threads', (request, reply) => {\n        threadDelivery.getThreadList(request, reply);\n    });\n\n    app.get(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/forum/:slug/users', (request, reply) => {\n        forumDelivery.getUserList(request, reply);\n    });\n\n    app.get(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/thread/:data/details', (request, reply) => {\n        threadDelivery.getThread(request, reply);\n    });\n\n    app.post(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/thread/:thread/details', (request, reply) => {\n        threadDelivery.updateThread(request, reply);\n    });\n\n    app.post(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/thread/:thread/create', (request, reply) => {\n        postDelivery.createPost(request, reply);\n    });\n\n    app.post(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/thread/:thread/vote', (request, reply) => {\n        threadDelivery.vote(request, reply);\n    });\n\n    app.get(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/thread/:thread/posts', (request, reply) => {\n        postDelivery.getPostList(request, reply);\n    });\n\n    app.post(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/post/:id/details', (request, reply) => {\n        postDelivery.updatePost(request, reply);\n    });\n\n    app.get(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"API\"] + '/post/:id/details', (request, reply) => {\n        postDelivery.getPost(request, reply);\n    });\n};\n\n\n//# sourceURL=webpack:///./internal/app/router/router.js?");

/***/ }),

/***/ "./internal/pkg/forum/delivery.js":
/*!****************************************!*\
  !*** ./internal/pkg/forum/delivery.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ForumDelivery; });\n/* harmony import */ var _repository_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./repository.js */ \"./internal/pkg/forum/repository.js\");\n/* harmony import */ var _models_forum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/forum.js */ \"./internal/pkg/models/forum.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n\n\n\n\n/**\n * Forum delivery\n */\nclass ForumDelivery {\n    /**\n     * Constructor\n     * @param {Object} pool\n     * @param {Object} sql\n     */\n    constructor(pool, sql) {\n        this.repository = new _repository_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](pool, sql);\n    }\n    /**\n     * User getting\n     * @param {Object} request\n     * @param {Object} response\n     */\n    getUserList(request, response) {\n        const limit = request.query.limit;\n        const since = request.query.since;\n        const desc = (request.query.desc === 'true');\n        this.repository.getUserList(request.params.slug, {\n            limit,\n            since,\n            desc,\n        })\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n\n    /**\n     * Post creation\n     * @param {Object} request\n     * @param {Object} response\n     */\n    createForum(request, response) {\n        const forum = Object(_models_forum_js__WEBPACK_IMPORTED_MODULE_1__[\"forumModel\"])(\n            request.body.slug,\n            request.body.user,\n            request.body.title,\n            request.body.posts,\n            request.body.threads,\n        );\n        this.repository.createForum(forum)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                    response.status(201).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].DUPLICATION:\n                    response.status(409).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n\n    /**\n     * Post creation\n     * @param {Object} request\n     * @param {Object} response\n     */\n    getForum(request, response) {\n        const forum = Object(_models_forum_js__WEBPACK_IMPORTED_MODULE_1__[\"forumModel\"])(\n            request.params.slug,\n        );\n        this.repository.getForum(forum)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/forum/delivery.js?");

/***/ }),

/***/ "./internal/pkg/forum/repository.js":
/*!******************************************!*\
  !*** ./internal/pkg/forum/repository.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ForumRepository; });\n/* harmony import */ var _repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../repository_helper/repository_helper.js */ \"./internal/pkg/repository_helper/repository_helper.js\");\n/* harmony import */ var _models_response_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/response.js */ \"./internal/pkg/models/response.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n/* harmony import */ var _user_repository_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../user/repository.js */ \"./internal/pkg/user/repository.js\");\n\n\n\n\n\n/**\n * kek\n */\nclass ForumRepository {\n    /**\n     * Constructor\n     * @param {Object} pool\n     * @param {Object} sql\n     */\n    constructor(pool, sql) {\n        this.pool = pool;\n        this.sql = sql;\n        this.userRepository = new _user_repository_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](pool, sql);\n    }\n\n\n    /**\n     * Getting user\n     * @param {Object} forum\n     * @return {Object}\n     */\n    async createForum(forum) {\n        const duplication = await this._getForumBySlug(forum);\n        if (duplication !== false) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].DUPLICATION, duplication);\n        }\n        const user = await this.userRepository.getUser({nickname: forum.user});\n        if (user.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND) {\n            return user;\n        }\n        forum.user = user.body.nickname;\n        await this._createForum(forum);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, forum);\n    }\n\n    /**\n     * Getting user list\n     * @param {String} slug\n     * @param {Object} params\n     * @return {Object}\n     */\n    async getUserList(slug, params) {\n        const checkForum = await this.getForum({slug});\n        if (checkForum.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND) {\n            return checkForum;\n        }\n\n        let str = 'SELECT nickname, fullname, email, about from forum_user WHERE forum = $1'\n\n        const arr = [\n            slug,\n        ];\n        if (params.since !== undefined) {\n            str += ' AND lower(nickname) > lower($2::TEXT) ';\n\n            arr.push(params.since);\n            if (params.desc) {\n                str = str.replace('>', '<');\n            }\n        }\n        str += ' ORDER BY nickname ';\n        if (params.desc) {\n            str += ' desc ';\n        }\n        if (params.limit !== undefined) {\n            str += ' limit ' + params.limit;\n        }\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, arr);\n        if (res.rowCount === 0) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, []);\n        }\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, res.rows);\n    }\n\n    /**\n     * Getting user\n     * @param {Object} forum\n     * @return {Object}\n     */\n    async getForum(forum) {\n        const forumData = await this._getForumBySlug(forum);\n        if (forumData === false) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND, 'Forum doesnt exist');\n        }\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, forumData);\n    }\n\n    /**\n     * Check if forum exists\n     * @param {Object} forum\n     * @return {Object}\n     */\n    async _getForumBySlug(forum) {\n        const str = 'SELECT slug, \"user\", title, posts, threads' +\n            ' FROM forum WHERE lower(slug) = $1';\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, [\n            forum.slug.toLowerCase(),\n        ]);\n        if (res.rowCount > 0) {\n            res.rows[0].posts = parseInt(res.rows[0].posts);\n        }\n        return res.rowCount === 0 ? false : res.rows[0];\n    }\n\n    /**\n     * Forum creation\n     * @param {Object} forum\n     */\n    async _createForum(forum) {\n        const str = 'INSERT INTO forum (slug, \"user\", title, posts, threads) ' +\n            'VALUES ($1, $2, $3, $4, $5)';\n        await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, [\n            forum.slug,\n            forum.user,\n            forum.title,\n            forum.posts ? forum.posts : 0,\n            forum.threads ? forum.threads : 0,\n        ]);\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/forum/repository.js?");

/***/ }),

/***/ "./internal/pkg/models/forum.js":
/*!**************************************!*\
  !*** ./internal/pkg/models/forum.js ***!
  \**************************************/
/*! exports provided: forumModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forumModel\", function() { return forumModel; });\nconst forumModel = (slug, user = '', title = '', posts = undefined, threads = undefined) => {\n    const forum = {\n        slug,\n        user,\n        title,\n    };\n    if (posts !== undefined) {\n        forum['posts'] = posts;\n    }\n    if (threads !== undefined) {\n        forum['threads'] = threads;\n    }\n    return forum;\n};\n\n\n//# sourceURL=webpack:///./internal/pkg/models/forum.js?");

/***/ }),

/***/ "./internal/pkg/models/post.js":
/*!*************************************!*\
  !*** ./internal/pkg/models/post.js ***!
  \*************************************/
/*! exports provided: postModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"postModel\", function() { return postModel; });\nconst postModel = (author, message, thread,\n    forum = undefined,\n    parent = undefined) => {\n    if (author === undefined || message === undefined || thread === undefined) {\n        return {'error': 'error'};\n    }\n    const post = {\n        message,\n        author,\n    };\n    if (!isInt(thread)) {\n        post['threadSlug'] = thread;\n    } else {\n        post['threadID'] = thread;\n    }\n    if (forum !== undefined) {\n        post['forum'] = forum;\n    }\n    if (parent !== undefined) {\n        post['parent'] = parent;\n    }\n    return post;\n};\n\nconst isInt = (value) => {\n    const er = /^-?[0-9]+$/;\n    return er.test(value);\n};\n\n\n\n//# sourceURL=webpack:///./internal/pkg/models/post.js?");

/***/ }),

/***/ "./internal/pkg/models/response.js":
/*!*****************************************!*\
  !*** ./internal/pkg/models/response.js ***!
  \*****************************************/
/*! exports provided: responseModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"responseModel\", function() { return responseModel; });\nconst responseModel = (type, body) => {\n    return {\n        type,\n        body,\n    };\n};\n\n\n//# sourceURL=webpack:///./internal/pkg/models/response.js?");

/***/ }),

/***/ "./internal/pkg/models/thread.js":
/*!***************************************!*\
  !*** ./internal/pkg/models/thread.js ***!
  \***************************************/
/*! exports provided: threadModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"threadModel\", function() { return threadModel; });\nconst threadModel = (forum, author, title, message,\n    slug = undefined, created = undefined,\n    votes = undefined, id = undefined) => {\n    const thread = {\n        forum,\n        author,\n        title,\n        message,\n    };\n    if (slug !== undefined) {\n        thread['slug'] = slug;\n    }\n    if (created !== undefined) {\n        thread['created'] = created;\n    }\n    if (votes !== undefined) {\n        thread['votes'] = votes;\n    }\n    if (id !== undefined) {\n        thread['id'] = id;\n    }\n    return thread;\n};\n\n\n//# sourceURL=webpack:///./internal/pkg/models/thread.js?");

/***/ }),

/***/ "./internal/pkg/models/user.js":
/*!*************************************!*\
  !*** ./internal/pkg/models/user.js ***!
  \*************************************/
/*! exports provided: userModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userModel\", function() { return userModel; });\nconst userModel = (nickname, fullname = '', email = '', about = '') => {\n    return {\n        nickname,\n        fullname,\n        email,\n        about,\n    };\n};\n\n\n//# sourceURL=webpack:///./internal/pkg/models/user.js?");

/***/ }),

/***/ "./internal/pkg/post/delivery.js":
/*!***************************************!*\
  !*** ./internal/pkg/post/delivery.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PostDelivery; });\n/* harmony import */ var _usecase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./usecase.js */ \"./internal/pkg/post/usecase.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n// import RepositoryPost from './repository.js';\n// import {postModel} from '../models/post.js';\n\n\n\n/**\n * Delivery post\n */\nclass PostDelivery {\n    /**\n     * Constructor\n     * @param {Object} pool\n     * @param {Object} sql\n     */\n    constructor(pool, sql) {\n        this.useCase = new _usecase_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](pool, sql);\n    }\n\n    /**\n     * Post creation\n     * @param {Object} request\n     * @param {Object} response\n     */\n    createPost(request, response) {\n        this.useCase.createPost(request.params.thread, request.body)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS:\n                    response.status(201).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].WRONG_PARENT:\n                    response.status(409).send({message: result.body});\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500).send({message: result.body});\n                    break;\n                }\n            });\n    }\n\n    /**\n     * Post update\n     * @param {Object} request\n     * @param {Object} response\n     */\n    updatePost(request, response) {\n        this.useCase.updatePost(request.params.id, request.body.message)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500).send({message: result.body});\n                    break;\n                }\n            });\n    }\n\n    /**\n     * Post getting\n     * @param {Object} request\n     * @param {Object} response\n     */\n    getPost(request, response) {\n        const params = request.query.related;\n        this.useCase.getPost(request.params.id, params)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500).send({message: result.body});\n                    break;\n                }\n            });\n    }\n\n    /**\n     * Get thread's posts\n     * @param {Object} request\n     * @param {Object} response\n     */\n    getPostList(request, response) {\n        const limit = request.query.limit;\n        const since = request.query.since;\n        const sort = request.query.sort;\n        const desc = (request.query.desc === 'true');\n        this.useCase.getPostList(request.params.thread, {\n            limit,\n            since,\n            sort,\n            desc,\n        })\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500).send({message: result.body});\n                    break;\n                }\n            });\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/post/delivery.js?");

/***/ }),

/***/ "./internal/pkg/post/repository.js":
/*!*****************************************!*\
  !*** ./internal/pkg/post/repository.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RepositoryPost; });\n/* harmony import */ var _models_response_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/response.js */ \"./internal/pkg/models/response.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n/* harmony import */ var _repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../repository_helper/repository_helper.js */ \"./internal/pkg/repository_helper/repository_helper.js\");\n\n\n\n\n/**\n * Repository post\n */\nclass RepositoryPost {\n    /**\n     * Constructor\n     * @param {Object} pool\n     * @param {Object} sql\n     */\n    constructor(pool, sql) {\n        this.pool = pool;\n        this.sql = sql;\n    }\n\n    /**\n     * Post creation\n     * @param {Object} postList\n     */\n    async createPost(postList) {\n        // const str = 'INSERT INTO post(author, created, forum, \"isEdited\", message, thread, parent, arr) ' +\n        //     'VALUES ($1,$2, $3, $4, $5, $6, $7, $8) RETURNING id';\n        for (const elem of postList) {\n            const arr = [\n                elem.author,\n                elem.created,\n                elem.forum,\n                elem.isEdited,\n                elem.message,\n                elem.thread,\n                elem.parent,\n                elem.arr,\n            ];\n            // if (arr[7] !== '{}' ) {\n            const kek = await this.sql`INSERT INTO post(author, created, forum, \"isEdited\", message, thread, parent, arr) \nVALUES (${arr[0]},${arr[1]}, ${arr[2]}, ${arr[3]}, ${arr[4]}, ${arr[5]}, ${arr[6]}, ARRAY[${arr[7]}]) RETURNING id`\n            // } else {\n            //     kek = await this.sql`INSERT INTO post(author, created, forum, \"isEdited\", message, thread, parent, arr)\n// VALUES (${arr[0]},${arr[1]}, ${arr[2]}, ${arr[3]}, ${arr[4]}, ${arr[5]}, ${arr[6]}, ${arr[7]}) RETURNING id`\n//             }\n            // const id = await query(this.pool, str, arr);\n            // elem.id = id.rows[0].id;\n            elem.id = kek[0].id;\n        }\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS, postList);\n    }\n\n    /**\n     * Post update\n     * @param {number} id\n     * @param {String} text\n     * @param {String} prevText\n     */\n    async updatePost(id, text, prevText) {\n        if (text === undefined) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS, await this.getPost(id));\n        }\n        let str = 'UPDATE post SET message = $1, \"isEdited\" = true WHERE id = $2 RETURNING author, created, forum, id, \"isEdited\", message, parent, thread;';\n        if (text === prevText) {\n            str = 'UPDATE post SET message = $1 WHERE id = $2 RETURNING author, created, forum, id, \"isEdited\", message, parent, thread;';\n        }\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, [\n            text,\n            id,\n        ]);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS, res.rows[0]);\n    }\n\n    /**\n     * Check if post with this id exists\n     * @param {number} id\n     */\n    async checkPostExists(id) {\n        const str = 'SELECT * from post where id = $1';\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, [\n            id,\n        ]);\n        return res.rowCount === 0 ? false : res.rows[0];\n    }\n\n    /**\n     * Check parent post\n     * @param {number} parentID\n     * @param {number} threadID\n     */\n    async checkParentPost(parentID, threadID) {\n        const str = 'SELECT arr, thread FROM post WHERE id = $1';\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, [\n            parentID,\n        ]);\n        // const res = await this.sql`SELECT arr, thread FROM post WHERE id = ${parentID}`\n        // console.log(res)\n        if (res.rowCount === 0 || res.rows[0].thread !== threadID) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].NOT_FOUND, 'There is not parent post with this ID');\n        }\n\n        return res.rows[0].arr;\n    }\n\n    /**\n     * Get post info\n     * @param {number} id\n     */\n    async getPost(id) {\n        const str = 'SELECT author, created, forum, id,  \"isEdited\", ' +\n            'message, parent, thread from post where post.id = $1';\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, [\n            id,\n        ]);\n        return res.rowCount === 0 ? false : res.rows[0];\n    }\n\n    /**\n     * tree sort\n     * @param {String} thread\n     * @param {Object} params\n     */\n    async treeSort(thread, params) {\n        let str = '';\n        const arr = [];\n        if (params.since !== undefined) {\n            if (params.desc) {\n                str = `SELECT id, author, parent, message, forum, thread, created\n                       FROM post\n                       WHERE thread = $1\n                         AND (arr < (SELECT arr FROM post WHERE id = $2))\n                       ORDER BY arr desc`;\n                arr.push(thread);\n                arr.push(params.since);\n            } else {\n                str = `SELECT id, author, parent, message, forum, thread, created\n                       FROM post\n                       WHERE thread = $1\n                         AND (arr > (SELECT arr FROM post WHERE id = $2))\n                       ORDER BY arr `;\n                arr.push(thread);\n                arr.push(params.since);\n            }\n        } else {\n            str = `SELECT id, author, parent, message, forum, thread, created\n                   FROM post\n                   WHERE thread = $1\n                   ORDER by arr `;\n            arr.push(thread);\n            if (params.desc) {\n                str += 'desc';\n            }\n        }\n\n        if (params.limit !== undefined) {\n            str += ' limit ' + params.limit;\n        }\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, arr);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS, res.rows);\n    }\n\n    /**\n     * Parent tree sort\n     * @param {String} thread\n     * @param {Object} params\n     */\n    async parentTreeSort(thread, params) {\n        let str = '';\n        const arr = [];\n        if (params.since !== undefined) {\n            arr.push(thread);\n            arr.push(params.since);\n            if (params.limit !== undefined) {\n                str = `  SELECT id, author, parent, message, forum, thread, created\n                         FROM post p\n                         WHERE p.thread = $1\n                           and p.arr[1] IN (\n                             SELECT p2.arr[1]\n                             FROM post p2\n                             WHERE p2.thread = $1\n                               AND p2.parent = 0\n                               and p2.arr[1] > (SELECT p3.arr[1]\n                                                from post p3\n                                                where p3.id = $2)\n                             ORDER BY p2.arr\n                             LIMIT $3)\n                         ORDER BY p.arr`;\n                if (params.desc) {\n                    str = `SELECT id, author, parent, message, forum, thread, created\n                           FROM post p\n                           WHERE p.thread = $1\n                             and p.arr[1] IN (SELECT p2.arr[1]\n                                              FROM post p2\n                                              WHERE p2.thread = $1\n                                                AND p2.parent = 0\n                                                and p2.arr[1] < (SELECT p3.arr[1] from post p3 where p3.id = $2)\n                                              ORDER BY p2.arr DESC\n                                              LIMIT $3\n                           )\n                           ORDER BY p.arr[1] DESC, p.arr[2:]`;\n                }\n                arr.push(params.limit);\n            } else {\n                str = `  SELECT id, author, parent, message, forum, thread, created\n                         FROM post p\n                         WHERE p.thread = $1\n                           and p.arr[1] IN (SELECT p2.arr[1]\n                                            FROM post p2\n                                            WHERE p2.thread = $1\n                                              AND p2.parent = 0\n                                              and p2.arr[1] > (SELECT p3.arr[1]\n                                                               from post p3\n                                                               where p3.id = $2)\n                                            ORDER BY p2.arr)\n                         ORDER BY p.arr`;\n                if (params.desc) {\n                    str = `  SELECT id, author, parent, message, forum, thread, created\n                             from posts p\n                             WHERE p.thread = $1\n                               and p.arr[1] IN (\n                                 SELECT p2.arr[1]\n                                 FROM posts p2\n                                 WHERE p2.thread = $1\n                                   AND p2.parent = 0\n                                   and p2.arr[1] < (SELECT p3.arr[1] from posts p3 where p3.id = $2)\n                                 ORDER BY p2.arr DESC\n                                 limit $3\n                             )\n                             ORDER BY p.arr[1] DESC, p.arr[2:]`;\n                    arr.push(params.desc);\n                }\n\n            }\n\n            if (params.desc) {\n                str = str.replace('order by id', 'order by id desc');\n                str = str.replace('order by p.arr, p.id', 'order by p.arr[0] desc, p.arr, p.id');\n                str = str.replace('>', '<');\n            }\n        } else {\n            if (params.desc) {\n                str = `  SELECT id, author, parent, message, forum, thread, created\n                         FROM post\n                         WHERE thread = $1\n                           AND arr[1] IN (\n                             SELECT arr[1]\n                             FROM post\n                             WHERE thread = $1\n                             GROUP BY arr[1]\n                             ORDER BY arr[1] DESC`;\n                arr.push(thread);\n                if (params.limit !== undefined) {\n                    str += ' LIMIT $2';\n                    arr.push(params.limit);\n                }\n                str += ') ORDER BY arr[1] DESC, arr';\n            } else {\n                str = ` SELECT id, author, parent, message, forum, thread, created\n                        FROM post\n                        WHERE thread = $1\n                          and arr[1] IN (\n                            SELECT arr[1]\n                            FROM post\n                            WHERE thread = $1\n                            GROUP BY arr[1]\n                            ORDER BY arr[1]`;\n                arr.push(thread);\n                if (params.limit !== undefined) {\n                    str += ' LIMIT $2';\n                    arr.push(params.limit);\n                }\n                str += ') ORDER BY arr';\n            }\n        }\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, arr);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS, res.rows);\n    }\n\n    /**\n     * flat sort\n     * @param {String} thread\n     * @param {Object} params\n     */\n    async flatSort(thread, params) {\n        let str = 'SELECT post.id, post.author, post.created, post.forum, post.\"isEdited\", ' +\n            'post.message, post.parent, post.thread from post inner join thread on ' +\n            'post.thread = thread.id where thread.id = $1';\n        const arr = [\n            thread,\n        ];\n        if (params.since !== undefined) {\n            str += ' AND post.id > $2';\n            arr.push(params.since);\n            if (params.desc) {\n                str = str.replace('>', '<');\n            }\n        }\n        str += (params.desc ?\n            ' order by post.created desc, post.id desc' :\n            ' order by post.created, post.id');\n        if (params.limit !== undefined) {\n            str += ' limit ' + params.limit;\n        }\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, arr);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS, res.rows);\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/post/repository.js?");

/***/ }),

/***/ "./internal/pkg/post/usecase.js":
/*!**************************************!*\
  !*** ./internal/pkg/post/usecase.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PostUseCase; });\n/* harmony import */ var _repository_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./repository.js */ \"./internal/pkg/post/repository.js\");\n/* harmony import */ var _models_post_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/post.js */ \"./internal/pkg/models/post.js\");\n/* harmony import */ var _models_response_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/response.js */ \"./internal/pkg/models/response.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n/* harmony import */ var _thread_repository_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../thread/repository.js */ \"./internal/pkg/thread/repository.js\");\n/* harmony import */ var _user_repository_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../user/repository.js */ \"./internal/pkg/user/repository.js\");\n/* harmony import */ var _forum_repository_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../forum/repository.js */ \"./internal/pkg/forum/repository.js\");\n\n\n\n\n\n\n\n\n/**\n * useCase post\n */\nclass PostUseCase {\n    /**\n     * Constructor\n     * @param {Object} pool\n     * @param {Object} sql\n     */\n    constructor(pool, sql) {\n        this.repository = new _repository_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](pool, sql);\n        this.threadRepository = new _thread_repository_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](pool, sql);\n        this.userRepository = new _user_repository_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](pool, sql);\n        this.forumRepository = new _forum_repository_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](pool, sql);\n    }\n\n    /**\n     * Post creation\n     * @param {String} thread\n     * @param {Object} postList\n     */\n    async createPost(thread, postList) {\n        const arr = [];\n        const curDay = new Date();\n        if (postList.length !== 0) {\n            let threadID = undefined;\n            let threadSlug = undefined;\n            if (this.isInt(thread)) {\n                threadID = thread;\n            } else {\n                threadSlug = thread;\n            }\n            const threadData = await this.threadRepository.getThreadIDForum({\n                id: threadID,\n                slug: threadSlug,\n            });\n            if (threadData.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].NOT_FOUND) {\n                return threadData;\n            }\n            for (const elem of postList) {\n                const postData = this.getPostThread(thread, elem, threadData);\n                if (postData.type !== undefined) {\n                    return postData;\n                }\n                const author = await this.userRepository.getUser({nickname: postData.author});\n                if (author.type !== _config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].SUCCESS) {\n                    return author;\n                }\n                postData.isEdited = false;\n                postData.arr = await this.checkParent(postData.parent, postData.thread);\n                if (postData.arr[0] === -1) {\n                    postData.parent = 0\n                }\n                if (postData.arr.type !== undefined) {\n                    return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_2__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].WRONG_PARENT, 'no parent');\n                }\n                postData.created = curDay;\n                arr.push(postData);\n            }\n        }\n\n        if (arr.length === 0) {\n            let threadID = undefined;\n            let threadSlug = undefined;\n            if (this.isInt(thread)) {\n                threadID = thread;\n            } else {\n                threadSlug = thread;\n            }\n            const threadData = await this.threadRepository.getThread({\n                slug: threadSlug,\n                id: threadID,\n            });\n            if (threadData.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].NOT_FOUND) {\n                return threadData;\n            }\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_2__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].SUCCESS, []);\n        }\n\n        return await this.repository.createPost(arr);\n    }\n\n    /**\n     * Check parent\n     * @param {number} parentID\n     * @param {number} threadID\n     * @return {number}\n     * @return {Object}\n     */\n    async checkParent(parentID, threadID) {\n        if (parentID === undefined) {\n            return [-1];\n        }\n        return await this.repository.checkParentPost(parentID, threadID);\n    }\n\n    /**\n     * Проверка всех данных одного поста\n     * @param {String} thread\n     * @param {Object} elem\n     * @param threadData\n     */\n    getPostThread(thread, elem, threadData) {\n        const single = (Object(_models_post_js__WEBPACK_IMPORTED_MODULE_1__[\"postModel\"])(\n            elem.author,\n            elem.message,\n            thread,\n            elem.forum,\n            elem.parent,\n        ));\n\n        if (single.error !== undefined) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_2__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].SUCCESS, []);\n        }\n        if (single.forum !== undefined && single.forum !== threadData.body.forum) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_2__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].NOT_FOUND, threadData);\n        }\n        single.thread = threadData.body.id;\n        single.forum = threadData.body.forum;\n        return single;\n    }\n\n    /**\n     * Проверка на сущетсоввание родительсокго поста\n     */\n    /**\n     * Post update\n     * @param {number} id\n     * @param {String} text\n     */\n    async updatePost(id, text) {\n        const checkPost = await this.repository.checkPostExists(id);\n        if (!checkPost) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_2__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].NOT_FOUND, 'There is not post with this id');\n        }\n        return await this.repository.updatePost(id, text, checkPost.message);\n    }\n\n    /**\n     * Post getting\n     * @param {number} id\n     * @param {String} related\n     */\n    async getPost(id, related) {\n        const res = {};\n        const checkPost = await this.repository.checkPostExists(id);\n        if (!checkPost) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_2__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].NOT_FOUND, 'There is not post with this id');\n        }\n        res.post = await this.repository.getPost(id);\n        if (related === undefined) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_2__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].SUCCESS, res);\n        }\n        if (related.includes('user')) {\n            const user = await this.userRepository.getUser({nickname: res.post.author});\n            res.author = user.body;\n        }\n        if (related.includes('thread')) {\n            const thread = await this.threadRepository.getThread({id: res.post.thread});\n            res.thread = thread.body;\n        }\n        if (related.includes('forum')) {\n            const forum = await this.forumRepository.getForum({slug: res.post.forum});\n            res.forum = forum.body;\n        }\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_2__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].SUCCESS, res);\n    }\n\n    /**\n     * @param {String} thread\n     * @param {Object} params\n     */\n    async getPostList(thread, params) {\n        const threadModel = {};\n        threadModel.slug = thread;\n        if (this.isInt(thread)) {\n            threadModel.id = thread;\n        }\n        const threadExists = await this.threadRepository.getThread(threadModel);\n        if (threadExists.type !== _config_constants_js__WEBPACK_IMPORTED_MODULE_3__[\"STATUSES\"].SUCCESS) {\n            return threadExists;\n        }\n        switch (params.sort) {\n            case 'tree':\n                return await this.repository.treeSort(threadExists.body.id, params);\n            case 'parent_tree':\n                return await this.repository.parentTreeSort(threadExists.body.id, params);\n            default:\n                return await this.repository.flatSort(threadExists.body.id, params);\n        }\n    }\n\n    /**\n     * @param {String} value\n     * @return {boolean}\n     */\n    isInt(value) {\n        const er = /^-?[0-9]+$/;\n        return er.test(value);\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/post/usecase.js?");

/***/ }),

/***/ "./internal/pkg/repository_helper/repository_helper.js":
/*!*************************************************************!*\
  !*** ./internal/pkg/repository_helper/repository_helper.js ***!
  \*************************************************************/
/*! exports provided: query */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"query\", function() { return query; });\nconst query = async (pool, str, data) => {\n    const client = await pool.connect();\n    let res = {};\n    try {\n        res = await client.query(str, data);\n    } catch (error) {\n        // console.log(error)\n        res.rowCount = 0;\n    } finally {\n        client.release();\n    }\n    return res;\n};\n\n\n//# sourceURL=webpack:///./internal/pkg/repository_helper/repository_helper.js?");

/***/ }),

/***/ "./internal/pkg/service/delivery.js":
/*!******************************************!*\
  !*** ./internal/pkg/service/delivery.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ServiceDelivery; });\n/* harmony import */ var _repository_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./repository.js */ \"./internal/pkg/service/repository.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n\n\n\n/**\n * Service delivery\n */\nclass ServiceDelivery {\n    /**\n     * Constructor\n     * @param {Object} sql\n     */\n    constructor(sql) {\n        this.repository = new _repository_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](sql);\n    }\n\n    /**\n     * User getting\n     * @param {Object} request\n     * @param {Object} response\n     */\n    getData(request, response) {\n        this.repository.getData()\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n\n    /**\n     * Clear\n     * @param {Object} request\n     * @param {Object} response\n     */\n    clear(request, response) {\n        this.repository.clear()\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/service/delivery.js?");

/***/ }),

/***/ "./internal/pkg/service/repository.js":
/*!********************************************!*\
  !*** ./internal/pkg/service/repository.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ServiceRepository; });\n/* harmony import */ var _repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../repository_helper/repository_helper.js */ \"./internal/pkg/repository_helper/repository_helper.js\");\n/* harmony import */ var _models_response_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/response.js */ \"./internal/pkg/models/response.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n\n\n\n\n/**\n * kek\n */\nclass ServiceRepository {\n    /**\n     * Constructor\n     * @param {Object} pool\n     */\n    constructor(pool) {\n        this.pool = pool;\n    }\n\n    /**\n     * Get data\n     */\n    async getData() {\n        const forumStr = 'SELECT count(*) from forum';\n        const postStr = 'SELECT count(*) from post';\n        const threadStr = 'SELECT count(*) from thread';\n        const userStr = 'SELECT count(*) from users';\n        const forum = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, forumStr, []);\n        const post = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, postStr, []);\n        const thread = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, threadStr, []);\n        const user = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, userStr, []);\n\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, {\n            forum: parseInt(forum.rows[0].count),\n            post: parseInt(post.rows[0].count),\n            thread: parseInt(thread.rows[0].count),\n            user: parseInt(user.rows[0].count),\n        });\n    }\n\n    /**\n     * clear\n     */\n    async clear() {\n        const str = 'truncate table votes RESTART IDENTITY cascade; ' +\n            'truncate table post RESTART IDENTITY cascade; ' +\n            'truncate table forum RESTART IDENTITY cascade; ' +\n            'truncate table thread RESTART IDENTITY cascade; ' +\n            'truncate table users RESTART IDENTITY cascade;';\n        await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, []);\n        return this.getData();\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/service/repository.js?");

/***/ }),

/***/ "./internal/pkg/thread/delivery.js":
/*!*****************************************!*\
  !*** ./internal/pkg/thread/delivery.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ThreadDelivery; });\n/* harmony import */ var _repository_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./repository.js */ \"./internal/pkg/thread/repository.js\");\n/* harmony import */ var _models_thread_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/thread.js */ \"./internal/pkg/models/thread.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n\n\n\n\n/**\n * Forum delivery\n */\nclass ThreadDelivery {\n    /**\n     * Constructor\n     * @param {Object} pool\n     * @param {Object} sql\n     */\n    constructor(pool, sql) {\n        this.repository = new _repository_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](pool, sql);\n    }\n\n    /**\n     * Thread creation\n     * @param {Object} request\n     * @param {Object} response\n     */\n    createThread(request, response) {\n        const thread = Object(_models_thread_js__WEBPACK_IMPORTED_MODULE_1__[\"threadModel\"])(\n            request.params.forum,\n            request.body.author,\n            request.body.title,\n            request.body.message,\n            request.body.slug,\n            request.body.created,\n            request.body.votes,\n            request.body.id,\n        );\n        this.repository.createThread(thread)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                    response.status(201).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].DUPLICATION:\n                    response.status(409).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n\n    /**\n     * Thread list getting\n     * @param {Object} request\n     * @param {Object} response\n     */\n    getThreadList(request, response) {\n        const limit = request.query.limit;\n        const since = request.query.since;\n        const desc = (request.query.desc === 'true');\n        this.repository.getThreadList(request.params.slug, {\n            limit,\n            since,\n            desc,\n        })\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n\n    /**\n     * Thread getting\n     * @param {Object} request\n     * @param {Object} response\n     */\n    getThread(request, response) {\n        const thread = {};\n        if (!this.isInt(request.params.data)) {\n            thread['slug'] = request.params.data;\n        } else {\n            thread['id'] = request.params.data;\n        }\n        this.repository.getThread(thread)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n\n    /**\n     * Votes\n     * @param {Object} request\n     * @param {Object} response\n     */\n    vote(request, response) {\n        this.repository.vote(request.body.nickname, request.params.thread, request.body.voice === 1)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n\n    /**\n     * Post update\n     * @param {Object} request\n     * @param {Object} response\n     */\n    updateThread(request, response) {\n        this.repository.updateThread(request.params.thread, request.body.message, request.body.title)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                    response.status(200).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                    response.status(404).send({message: result.body});\n                    break;\n                default:\n                    response.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                response.status(500);\n            });\n    }\n\n    /**\n     * @param {String} value\n     * @return {boolean}\n     */\n    isInt(value) {\n        const er = /^-?[0-9]+$/;\n        return er.test(value);\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/thread/delivery.js?");

/***/ }),

/***/ "./internal/pkg/thread/repository.js":
/*!*******************************************!*\
  !*** ./internal/pkg/thread/repository.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ThreadRepository; });\n/* harmony import */ var _repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../repository_helper/repository_helper.js */ \"./internal/pkg/repository_helper/repository_helper.js\");\n/* harmony import */ var _models_response_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/response.js */ \"./internal/pkg/models/response.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n/* harmony import */ var _user_repository_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../user/repository.js */ \"./internal/pkg/user/repository.js\");\n/* harmony import */ var _forum_repository_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../forum/repository.js */ \"./internal/pkg/forum/repository.js\");\n\n\n\n\n\n\n/**\n * kek\n */\nclass ThreadRepository {\n    /**\n     * Constructor\n     * @param {Object} pool\n     * @param {Object} sql\n     */\n    constructor(pool, sql) {\n        this.pool = pool;\n        this.sql = sql;\n        this.userRepository = new _user_repository_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](pool, sql);\n        this.forumRepository = new _forum_repository_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](pool, sql);\n    }\n\n    /**\n     * Thread creation\n     * @param {Object} thread\n     * @return {Object}\n     */\n    async createThread(thread) {\n        if (thread.slug !== undefined) {\n            const duplication = await this._getThreadBySlug(thread);\n            if (duplication !== false) {\n                return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].DUPLICATION, duplication);\n            }\n        }\n        const user = await this.userRepository.getUser({nickname: thread.author.toLowerCase()});\n        if (user.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND, 'Cant find user');\n        }\n        thread.author = user.body.nickname;\n        const forum = await this.forumRepository.getForum({slug: thread.forum});\n        if (forum.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND, 'Cant find forum');\n        }\n        thread.forum = forum.body.slug;\n        const res = await this._createThread(thread);\n        if (res === false) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND, 'Cant find user');\n        }\n        thread.id = res.id;\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, thread);\n    }\n\n    /**\n     * Thread creation\n     * @param {String} thread\n     * @param {String} message\n     * @param {String} title\n     * @return {Object}\n     */\n    async updateThread(thread, message, title) {\n        let checkThread = {};\n        if (this.isInt(thread)) {\n            checkThread = await this.getThread({id: thread});\n        } else {\n            checkThread = await this.getThread({slug: thread});\n        }\n        if (checkThread.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND) {\n            return checkThread;\n        }\n        thread = checkThread.body.id;\n        return await this._updateThread(thread, message, title, checkThread.body);\n    }\n\n    /**\n     * Thread creation\n     * @param {Object} thread\n     * @return {Object}\n     */\n    async getThread(thread) {\n        let res = {};\n        if (thread.id === undefined) {\n            res = await this._getThreadBySlug(thread);\n        } else {\n            res = await this._getThreadByID(thread);\n        }\n        if (res === false) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND, 'There isnt thread with this data');\n        }\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, res);\n    }\n\n    /**\n     * Thread creation\n     * @param {Object} thread\n     * @return {Object}\n     */\n    async getThreadIDForum(thread) {\n        let res;\n        if (thread.id === undefined) {\n            res = await this._getThreadIDForumBySlug(thread);\n        } else {\n            res = await this._getThreadIDForumByID(thread);\n        }\n        if (res === false) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND, 'There isnt thread with this data');\n        }\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, res);\n    }\n\n    /** Get slug list\n     * @param {String} slug\n     * @param {Object} params\n     */\n    async getThreadList(slug, params) {\n        const check = await this.forumRepository.getForum({slug: slug});\n        if (check.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND) {\n            return check;\n        }\n        let str = 'SELECT * from thread where forum = $1 ';\n        const arr = [\n            slug,\n        ];\n        if (params.since !== undefined) {\n            str += 'and created >= $2 ';\n            arr.push(params.since);\n            if (params.desc) {\n                str = str.replace('>=', '<=');\n            }\n        }\n        str += 'order by created ';\n        if (params.desc) {\n            str += 'desc ';\n        }\n        if (params.limit) {\n            str += 'limit ' + params.limit;\n        }\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, arr);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, res.rows);\n    }\n\n\n    /**\n     * Thread creation\n     * @param {String} thread\n     * @param {String} message\n     * @param {String} title\n     * @param {Object} threadData\n     * @return {Object}\n     */\n    async _updateThread(thread, message, title, threadData) {\n        if (message === undefined && title === undefined) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, threadData);\n        }\n        let str = 'update thread set';\n        const arr = [];\n        if (message !== undefined) {\n            str += ' message = $1';\n            arr.push(message);\n            if (title !== undefined) {\n                str += ' , title = $2';\n                arr.push(title);\n            }\n        } else {\n            str += ' title = $1';\n            arr.push(title);\n        }\n        str += ' where id = $' + (arr.length + 1);\n        arr.push(thread);\n        str += ' returning id, forum, author, title, message, slug, created, votes';\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, arr);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, res.rows[0]);\n    }\n\n    /**\n     * Check if exists by slug\n     * @param {Object} thread\n     * @return {Object}\n     */\n    async _getThreadBySlug(thread) {\n\n        // const str = 'SELECT id, forum, author, title, message, slug, created, votes FROM thread WHERE slug = $1';\n        //\n        // const res = await query(this.pool, str, [\n        //     thread.slug.toLowerCase(),\n        // ]);\n        const res = await this.sql`SELECT id, forum, author, title, message, slug, created, votes FROM thread WHERE slug = ${thread.slug.toLowerCase()}`\n        // return res.rowCount === 0 ? false : res.rows[0];\n        return res.count === 0 ?  false: res[0]\n    }\n\n    /**\n     * Check if exists by slug\n     * @param {Object} thread\n     * @return {Object}\n     */\n    async _getThreadIDForumBySlug(thread) {\n        // const str = 'SELECT id, forum FROM thread WHERE slug = $1';\n        // const res = await query(this.pool, str, [\n        //     thread.slug.toLowerCase(),\n        // ]);\n        // return res.rowCount === 0 ? false : res.rows[0];\n\n        const res = await this.sql`SELECT id, forum FROM thread WHERE slug = ${thread.slug.toLowerCase()}`\n        return res.count === 0 ?  false: res[0]\n    }\n\n    /**\n     * Check if exists by id\n     * @param {Object} thread\n     * @return {Object}\n     */\n    async _getThreadByID(thread) {\n        if (thread.id === undefined) {\n            return false;\n        }\n        const str = 'SELECT id, forum, author, title, message, slug, created, votes FROM thread WHERE id = $1';\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, [\n            thread.id,\n        ]);\n        return res.rowCount === 0 ? false : res.rows[0];\n    }\n\n    /**\n     * Check if exists by id\n     * @param {Object} thread\n     * @return {Object}\n     */\n    async _getThreadIDForumByID(thread) {\n        // const str = 'SELECT id, forum FROM thread WHERE id = $1';\n        // const res = await query(this.pool, str, [\n        //     thread.id,\n        // ]);\n        // return res.rowCount === 0 ? false : res.rows[0];\n\n        const res = await this.sql`SELECT id, forum FROM thread WHERE id = ${thread.id}`\n        return res.count === 0 ?  false: res[0]\n    }\n\n\n    /**\n     * Check if exists by id\n     * @param {Object} thread\n     * @return {Object}\n     */\n    async _createThread(thread) {\n        let str = 'INSERT INTO thread(author, title, message, forum';\n        const array = [\n            thread.author,\n            thread.title,\n            thread.message,\n            thread.forum,\n        ];\n        if (thread.slug !== undefined) {\n            str += ', slug';\n            array.push(thread.slug);\n        }\n        if (thread.created !== undefined) {\n            str += ', created';\n            array.push(thread.created);\n        }\n        if (thread.votes !== undefined) {\n            str += ', votes';\n            array.push(thread.votes);\n        }\n        str += ') VALUES (';\n        const len = array.length;\n        for (let i = 1; i < len; i++) {\n            str += `$${i}, `;\n        }\n        str += `$${len}) RETURNING id`;\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, array);\n        return res.rowCount === 0 ? false : res.rows[0];\n    }\n\n    /**\n     * Set vote\n     * @param {String} nickname\n     * @param {number} id\n     * @param {boolean} voteSign\n     */\n    async vote(nickname, id, voteSign) {\n        const checkUser = await this.userRepository.getUser({nickname});\n        if (checkUser.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND) {\n            return checkUser;\n        }\n        let checkThread = {};\n        if (this.isInt(id.toString())) {\n            checkThread = await this.getThread({id});\n        } else {\n            checkThread = await this.getThread({slug: id});\n        }\n        if (checkThread.type === _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND) {\n            return checkThread;\n        }\n        id = checkThread.body.id;\n        const checkVote = await this._checkVote(nickname, id, voteSign);\n        if (checkVote === false) {\n            checkThread.body.votes += (voteSign ? 1 : -1);\n            await this._createFirstVote(nickname, id, voteSign);\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, checkThread.body);\n        }\n        if (checkVote.vote) {\n            if (voteSign) {\n                return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, checkThread.body);\n            }\n            checkThread.body.votes -= 2;\n        } else {\n            if (!voteSign) {\n                return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, checkThread.body);\n            }\n            checkThread.body.votes += 2;\n        }\n        await this._createSecondVote(nickname, id, voteSign);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, checkThread.body);\n    }\n\n    /**\n     * Vote create\n     * @param {String} nickname\n     * @param {number} id\n     * @param {number} voteSign\n     */\n    async _makeVote(nickname, id, voteSign) {\n        const str = 'UPDATE votes SET vote = $1 WHERE thread = $2 AND author = $3;';\n        let req = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, [\n            voteSign,\n            id,\n            nickname,\n        ]);\n        if (req.rowCount === 0) {\n            const str2 = 'INSERT INTO votes (author, thread, vote) VALUES ($1, $2, $3);';\n            await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str2, [\n                nickname,\n                id,\n                voteSign,\n            ]);\n        }\n        const str3 = 'SELECT votes FROM thread WHERE id = $1';\n        let result = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str3, [\n            id,\n        ]);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, result.rows[0]);\n    }\n\n    /**\n     * Vote create\n     * @param {String} nickname\n     * @param {number} id\n     * @param {boolean} voteSign\n     */\n    async _createFirstVote(nickname, id, voteSign) {\n        const str = 'insert into votes (author, thread, vote) values ($1, $2, $3)';\n        await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, [\n            nickname,\n            id,\n            voteSign,\n        ]);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, 'ok');\n    }\n\n    /**\n     * Vote create\n     * @param {String} nickname\n     * @param {number} id\n     * @param {boolean} voteSign\n     */\n    async _createSecondVote(nickname, id, voteSign) {\n        const str = 'UPDATE votes set vote = $1 where author = $2 and thread = $3';\n        await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, [\n            voteSign,\n            nickname,\n            id,\n        ]);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_1__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS, 'ok');\n    }\n\n    /**\n     * Set vote\n     * @param {String} nickname\n     * @param {number} id\n     * @param {boolean} voteSign\n     */\n    async _checkVote(nickname, id, voteSign) {\n        const str = 'SELECT vote from votes where author = $1 AND thread = $2';\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_0__[\"query\"])(this.pool, str, [\n            nickname,\n            id,\n        ]);\n        return res.rowCount === 0 ? false : res.rows[0];\n    }\n\n    /**\n     * @param {String} value\n     * @return {boolean}\n     */\n    isInt(value) {\n        const er = /^-?[0-9]+$/;\n        return er.test(value);\n    }\n\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/thread/repository.js?");

/***/ }),

/***/ "./internal/pkg/user/delivery.js":
/*!***************************************!*\
  !*** ./internal/pkg/user/delivery.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return UserDelivery; });\n/* harmony import */ var _repository_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./repository.js */ \"./internal/pkg/user/repository.js\");\n/* harmony import */ var _models_user_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/user.js */ \"./internal/pkg/models/user.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n\n\n\n\n/**\n * kek\n */\nclass UserDelivery {\n    /**\n     * Constructor\n     * @param {Object} pool\n     * @param {Object} sql\n     */\n    constructor(pool, sql) {\n        // this.pool = pool;\n        this.repository = new _repository_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](pool, sql);\n    }\n\n    /**\n     * User creation\n     * @param {Object} request\n     * @param {Object} response\n     */\n    createUser(request, reply) {\n        const user = Object(_models_user_js__WEBPACK_IMPORTED_MODULE_1__[\"userModel\"])(\n            request.params.nickname,\n            request.body.fullname,\n            request.body.email,\n            request.body.about,\n        );\n        this.repository.createUser(user)\n            .then((result) => {\n                switch (result.type) {\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                    reply.status(201).send(result.body);\n                    break;\n                case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].DUPLICATION:\n                    reply.status(409).send(result.body);\n                    break;\n                default:\n                    reply.status(500);\n                    break;\n                }\n            })\n            .catch((error) => {\n                reply.status(500);\n            });\n    }\n\n    /**\n     * User getting\n     * @param {Object} request\n     * @param {Object} response\n     */\n    getUser(request, response) {\n        const user = Object(_models_user_js__WEBPACK_IMPORTED_MODULE_1__[\"userModel\"])(\n            request.params.nickname,\n        );\n        const promise = this.repository.getUser(user);\n        promise.then((result) => {\n            switch (result.type) {\n            case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                response.status(200).send(result.body);\n                break;\n            case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                response.status(404).send({message: result.body});\n                break;\n            default:\n                response.status(500);\n                break;\n            }\n        }).catch((error) => {\n            response.status(500);\n        });\n    }\n\n    /**\n     * User updating\n     * @param {Object} request\n     * @param {Object} response\n     */\n    updateUser(request, response) {\n        const user = Object(_models_user_js__WEBPACK_IMPORTED_MODULE_1__[\"userModel\"])(\n            request.params.nickname,\n            request.body.fullname,\n            request.body.email,\n            request.body.about,\n        );\n        const promise = this.repository.updateUser(user);\n        promise.then((result) => {\n            switch (result.type) {\n            case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].SUCCESS:\n                response.status(200).send(result.body);\n                break;\n            case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].NOT_FOUND:\n                response.status(404).send({message: result.body});\n                break;\n            case _config_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STATUSES\"].DUPLICATION:\n                response.status(409).send({message: result.body});\n                break;\n            default:\n                response.status(500);\n                break;\n            }\n        }).catch((error) => {\n            response.status(500);\n        });\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/user/delivery.js?");

/***/ }),

/***/ "./internal/pkg/user/repository.js":
/*!*****************************************!*\
  !*** ./internal/pkg/user/repository.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return UserRepository; });\n/* harmony import */ var _models_response_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/response.js */ \"./internal/pkg/models/response.js\");\n/* harmony import */ var _config_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../config/constants.js */ \"./config/constants.js\");\n/* harmony import */ var _repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../repository_helper/repository_helper.js */ \"./internal/pkg/repository_helper/repository_helper.js\");\n\n\n\n\n/**\n * kek\n */\nclass UserRepository {\n    /**\n     * Constructor\n     * @param {Object} pool\n     * @param {Object} sql\n     */\n    constructor(pool, sql) {\n        this.pool = pool;\n        this.sql = sql;\n    }\n\n    /**\n     * Getting user\n     * @param {Object} user\n     * @return {Object}\n     */\n    async getUser(user) {\n        const userData = await this._getUserByName(user);\n        if (userData === false) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].NOT_FOUND, 'Cant find user');\n        }\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS, userData);\n    }\n\n    /**\n     * Create user\n     * @param {Object} user\n     * @return {Object}\n     */\n    async createUser(user) {\n        const duplication = await this._checkUserDuplication(user);\n        if (duplication !== false) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].DUPLICATION, duplication);\n        }\n        const str = 'INSERT INTO users (nickname, fullname, email, about) ' +\n            'VALUES ($1,$2,$3,$4)';\n        await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, [\n            user.nickname,\n            user.fullname,\n            user.email,\n            user.about,\n        ]);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS, user);\n    }\n\n    /**\n     * Update user\n     * @param {Object} user\n     * @return {Object}\n     */\n    async updateUser(user) {\n        const ifExists = await this._getUserByName(user);\n        if (ifExists === false) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].NOT_FOUND, 'Cant find user');\n        }\n        const duplication = await this._getUserByEmail(user);\n        if (duplication !== false) {\n            return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].DUPLICATION, 'This email is already exists');\n        }\n        user.email = user.email === '' ? ifExists.email : user.email;\n        user.about = user.about === '' ? ifExists.about : user.about;\n        user.fullname = user.fullname === '' ? ifExists.fullname : user.fullname;\n        await this._updateUser(user);\n        return Object(_models_response_js__WEBPACK_IMPORTED_MODULE_0__[\"responseModel\"])(_config_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STATUSES\"].SUCCESS, user);\n    }\n\n    /**\n     * Check if user exists\n     * @param {Object} user\n     * @return {Object}\n     */\n    async _checkUserDuplication(user) {\n        const str = 'SELECT * FROM users WHERE lower(nickname) = $1 OR lower(email) = $2';\n        const res = await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, [\n            user.nickname.toLowerCase(),\n            user.email.toLowerCase(),\n        ]);\n        return res.rowCount === 0 ? false : res.rows;\n    }\n\n    /**\n     * Get user by name\n     * @param {Object} user\n     * @return {Object}\n     */\n    async _getUserByName(user) {\n        // const str = 'SELECT * FROM users WHERE nickname = $1';\n        // const res = await query(this.pool, str, [\n        //     user.nickname.toLowerCase(),\n        // ]);\n        // return res.rowCount === 0 ? false : res.rows[0];\n\n        const res = await this.sql`SELECT * FROM users WHERE nickname = ${user.nickname.toLowerCase()}`\n        return res.count === 0 ?  false: res[0]\n    }\n\n    /**\n     * Get user by email\n     * @param {Object} user\n     * @return {Object}\n     */\n    async _getUserByEmail(user) {\n        // const str = 'SELECT * FROM users WHERE lower(email) = $1';\n        // const res = await query(this.pool, str, [\n        //     user.email.toLowerCase(),\n        // ]);\n        // return res.rowCount === 0 ? false : res.rows[0];\n\n        const res = await this.sql`SELECT * FROM users WHERE email = ${user.email.toLowerCase()}`\n        return res.count === 0 ?  false: res[0]\n    }\n\n    /**\n     * updateUser\n     * @param {Object} user\n     */\n    async _updateUser(user) {\n        const str = 'UPDATE users SET fullname = $1, email = $2, about = $3 ' +\n            'WHERE lower(nickname) =$4';\n        await Object(_repository_helper_repository_helper_js__WEBPACK_IMPORTED_MODULE_2__[\"query\"])(this.pool, str, [\n            user.fullname,\n            user.email,\n            user.about,\n            user.nickname.toLowerCase(),\n        ]);\n    }\n}\n\n\n//# sourceURL=webpack:///./internal/pkg/user/repository.js?");

/***/ }),

/***/ "./server.js":
/*!*******************!*\
  !*** ./server.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fastify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fastify */ \"fastify\");\n/* harmony import */ var fastify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fastify__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var postgres__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! postgres */ \"postgres\");\n/* harmony import */ var postgres__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(postgres__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _internal_app_router_router_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/app/router/router.js */ \"./internal/app/router/router.js\");\n\n\n\n\n\nconst {native} = pg__WEBPACK_IMPORTED_MODULE_2___default.a;\n\n\n\nconst hostname = '0.0.0.0';\nconst port = 5000;\n\n// const app = express();\nconst app = fastify__WEBPACK_IMPORTED_MODULE_1___default()();\n// app.use(bodyParser.json());\n\nconst pool = new native.Pool({\n    user: 'docker',\n    host: 'localhost',\n    database: 'docker',\n    password: 'docker',\n    port: 5432,\n});\n\n// const pool = new native.Pool({\n//     user: 'postgres',\n//     host: 'localhost',\n//     database: 'db_nat',\n//     password: 'postgres',\n//     port: 5432,\n// });\n\nconst pool2 = new pg__WEBPACK_IMPORTED_MODULE_2___default.a.Pool({\n    user: 'docker',\n    host: 'localhost',\n    database: 'docker',\n    password: 'docker',\n    port: 5432,\n});\n// const pool2 = new pkg.Pool({\n//     user: 'postgres',\n//     host: 'localhost',\n//     database: 'db_nat',\n//     password: 'postgres',\n//     port: 5432,\n// });\n\nconst sql = postgres__WEBPACK_IMPORTED_MODULE_3___default()('postgres://username:password@host:port/database', {\n    host: 'localhost',\n    port: 5432,       // Postgres server port\n    database: 'docker',         // Name of database to connect to\n    username: 'docker',         // Username of database user\n    password: 'docker',         // Password of database user\n    max: 20,         // Max number of connections\n});\n// const sql = postgres('postgres://username:password@host:port/database', {\n//     host: 'localhost',\n//     port: 5432,       // Postgres server port\n//     database: 'db_nat',         // Name of database to connect to\n//     username: 'postgres',         // Username of database user\n//     password: 'postgres',         // Password of database user\n//     max: 20,         // Max number of connections\n// })\n\nObject(_internal_app_router_router_js__WEBPACK_IMPORTED_MODULE_4__[\"router\"])(app, pool, pool2, sql);\n\nconst setUpFastify = () => {\n    app.addContentTypeParser('application/json', {parseAs: 'buffer'}, function(req, body, done) {\n            try {\n                done(null, JSON.parse(body.toString('utf-8')));\n            } catch (e) {\n                done(null, '');\n            }\n        },\n    );\n};\n\napp.listen(port, hostname, (err, address) => {\n    if (err) throw err;\n    console.log(`Server running at http://${address}/`);\n});\n\nsetUpFastify();\n\n\n//# sourceURL=webpack:///./server.js?");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"express\");\n\n//# sourceURL=webpack:///external_%22express%22?");

/***/ }),

/***/ "fastify":
/*!**************************!*\
  !*** external "fastify" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fastify\");\n\n//# sourceURL=webpack:///external_%22fastify%22?");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"pg\");\n\n//# sourceURL=webpack:///external_%22pg%22?");

/***/ }),

/***/ "postgres":
/*!***************************!*\
  !*** external "postgres" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"postgres\");\n\n//# sourceURL=webpack:///external_%22postgres%22?");

/***/ })

/******/ });